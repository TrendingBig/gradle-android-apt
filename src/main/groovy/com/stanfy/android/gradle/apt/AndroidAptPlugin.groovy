package com.stanfy.android.gradle.apt

import com.android.build.gradle.AppExtension
import com.android.build.gradle.api.BaseVariant
import org.gradle.api.Action
import org.gradle.api.GradleException
import org.gradle.api.Plugin
import org.gradle.api.Project
import org.gradle.api.Task
import org.gradle.api.tasks.compile.JavaCompile

/**
 * Makes sources generated by annotation processors visible in Android Studio.
 */
public class AndroidAptPlugin implements Plugin<Project> {

  @Override
  public void apply(final Project project) {
    def ext = project.getExtensions().findByName("android");
    if (ext == null) {
      throw new GradleException("Not Android project");
    }

    def variants
    if (ext instanceof AppExtension) {
      variants = 'applicationVariants';
    } else {
      variants = 'libraryVariants';
    }

    final File aptOutputDir = project.file(new File(project.getBuildDir(), "generated/source/apt"));

    ext[variants].all(new Action<BaseVariant>() {
      @Override
      public void execute(final BaseVariant v) {
        final File aptOutput = new File(aptOutputDir, v.getDirName());
        v.addJavaSourceFoldersToModel(aptOutput);
        JavaCompile javaCompile = v.getJavaCompile();
        javaCompile.getOptions().getCompilerArgs().addAll(Arrays.asList("-s", aptOutput.getAbsolutePath()));
        javaCompile.doFirst(new Action<Task>() {
          @Override
          public void execute(final Task task) {
            aptOutput.mkdirs();
          }
        });
      }
    });
  }

}
